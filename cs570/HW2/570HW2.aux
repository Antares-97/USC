\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand*\HyPL@Entry[1]{}
\HyPL@Entry{0<</S/D>>}
\@writefile{toc}{\contentsline {section}{\numberline {1}Graded Problems}{1}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Kleinberg and Tardos, Chapter 2, Exercise 3.}{1}{subsection.1.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Kleinberg and Tardos, Chapter 2, Exercise 4.}{1}{subsection.1.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Kleinberg and Tardos, Chapter 2, Exercise 5.}{1}{subsection.1.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.1}$\qopname  \relax o{log}_2f(n)$ is $O(\qopname  \relax o{log}_2 g(n))$}{1}{subsubsection.1.3.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.2}$2^{f(n)}$ is $O(2^{g(n)})$}{1}{subsubsection.1.3.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.3}$f(n)^2$ is $O(g(n)^2)$}{1}{subsubsection.1.3.3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}Which of the following statements are true?}{1}{subsection.1.4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.1}If $f$, $g$, and $h$ are positive increasing functions with $f$ in $O(h)$ and $g$ in $\Omega (h)$, then the function $f + g$ must be in $\Theta (h)$.}{1}{subsubsection.1.4.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.2}Given a problem with input of size $n$, a solution with $O(n)$ time complexity always costs less in computing time than a solution with $O(n^2)$ time complexity.}{2}{subsubsection.1.4.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.3}$F(n)=4n+\sqrt  {3n}$ is both $O(n)$ and $\Theta (n)$.}{2}{subsubsection.1.4.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.4}For a search starting at node $s$ in graph $G$, the DFS Tree is never as the same as the BFS tree.}{2}{subsubsection.1.4.4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.5}BFS can be used to find the shortest path between any two nodes in a non-weighted graph.}{2}{subsubsection.1.4.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5}Kleinberg and Tardos, Chapter 3, Exercise 2.}{2}{subsection.1.5}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Undirected Graph Cycle Detection Algorithm\relax }}{2}{algorithm.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Practice Problems}{3}{section.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Kleinberg and Tardos, Chapter 2, Exercise 6.}{3}{subsection.2.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}}{3}{subsubsection.2.1.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}}{3}{subsubsection.2.1.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}}{3}{subsubsection.2.1.3}}
\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces Quick-sum Algorithm\relax }}{3}{algorithm.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Kleinberg and Tardos, Chapter 3, Exercise 6.}{3}{subsection.2.2}}
